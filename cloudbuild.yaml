substitutions:
  _REGION: 'europe-west1'
  _SERVICE_NAME: 'noita-backend'
  _REPO: 'europe-west1-docker.pkg.dev/noita-website/noita-website'

options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # # Install dependencies
  # - name: 'node:22' # Or your specific Node.js version
  #   entrypoint: 'npm'
  #   args: ['install']

  # # Run tests
  # - name: 'node:22'
  #   entrypoint: 'npm'
  #   args: ['test']

  # Build the image with short SHA tag
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t', '${_REPO}/${_SERVICE_NAME}:$SHORT_SHA',
        '.'
      ]

  # Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        '${_REPO}/${_SERVICE_NAME}:$SHORT_SHA'
      ]

  # Deploy to Cloud Run with Cloud SQL connection and secrets
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      [
        'run', 'deploy', '${_SERVICE_NAME}',
        '--image=${_REPO}/${_SERVICE_NAME}:$SHORT_SHA',
        '--region=${_REGION}',
        '--platform=managed',
        '--service-account=noita-backend@noita-website.iam.gserviceaccount.com',
        '--no-allow-unauthenticated',
        '--add-cloudsql-instances=${_CLOUDSQL_INSTANCE}',
        '--set-env-vars=DB_USER=${_DB_USER},DB_NAME=${_DB_NAME},DB_SSL=true,SERVER_PORT=8080',
        '--set-secrets=DB_PASS=DB_PASS:latest',
        '--port=8080'
      ]

images:
  - '${_REPO}/${_SERVICE_NAME}:$SHORT_SHA'

timeout: 900s