substitutions:
  _REGION: 'europe-west1'
  _SERVICE_NAME: 'noita-backend'
  _REPO: 'europe-west1-docker.pkg.dev/${PROJECT_ID}/noita-website'
  _CLOUDSQL_INSTANCE: '${PROJECT_ID}:europe-west1:noita-website-instance'

options:
  logging: CLOUD_LOGGING_ONLY
  dynamicSubstitutions: true
  automapSubstitutions: true

steps:
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t', '${_REPO}/${_SERVICE_NAME}:$SHORT_SHA',
        '.'
      ]

  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        '${_REPO}/${_SERVICE_NAME}:$SHORT_SHA'
      ]

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:alpine'
    entrypoint: 'gcloud'
    args:
      [
        'run', 'deploy', '${_SERVICE_NAME}',
        '--region=${_REGION}',
        '--platform=managed',
        '--service-account=noita-backend@noita-website.iam.gserviceaccount.com',
        '--no-allow-unauthenticated',
        '--execution-environment=gen2',
        '--cpu-boost',
        '--max-instances=1',
        '--ingress=all',
    
        '--container=cloud-sql-proxy',
        '--image=gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.16.0',
        '--cpu=1',
        '--memory=128Mi',
        '--args=--address=0.0.0.0,--port=5432,--structured-logs,${_CLOUDSQL_INSTANCE}',
        '--startup-probe=timeoutSeconds=1,periodSeconds=10,failureThreshold=3,tcpSocket.port=5432',

        '--container=app',
        '--image=${_REPO}/${_SERVICE_NAME}:$SHORT_SHA',
        '--set-env-vars=DB_USER=$$DB_USER,DB_SSL=false,DB_HOST=127.0.0.1,SERVER_PORT=8080',
        '--set-secrets=DB_PASS=DB_PASS:latest',
        '--cpu=1',
        '--memory=512Mi',
        '--port=8080',
        '--startup-probe=initialDelaySeconds=10,periodSeconds=10,failureThreshold=3,tcpSocket.port=8080',
        '--depends-on=cloud-sql-proxy',
      ]
    secretEnv: ['DB_USER', 'DB_NAME']

availableSecrets:
  secretManager:
  - versionName: projects/noita-website/secrets/DB_USER/versions/latest
    env: 'DB_USER'
  - versionName: projects/noita-website/secrets/DB_NAME/versions/latest
    env: 'DB_NAME'

images:
  - '${_REPO}/${_SERVICE_NAME}:$SHORT_SHA'

timeout: 900s